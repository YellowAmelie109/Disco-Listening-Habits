{"version":3,"file":"component---src-pages-reading-ts.js","mappings":";;;;;;;;;;;;;AAAA,eAAeA,cAAc,CAACC,UAAU,EAAC;EAAC;EACtC,IAAIC,KAAe,GAAG,EAAE;EACxB,IAAIC,QAAkB,GAAG,EAAE;EAC3B,IAAIC,eAAuB,GAAG,MAAMH,UAAU,CAAC,OAAO,CAAC;EACvD,IAAII,OAAiB,GAAG,EAAE;EAC1B,IAAIC,aAAqB,GAAG,CAAC;EAE7B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,eAAe,EAAEG,CAAC,EAAE,EAAC;IAAC;IACtC,MAAMC,IAAI,GAAG,MAAMP,UAAU,CAAC,OAAO,CAAC,CAACM,CAAC,CAAC;IACzCL,KAAK,CAACO,IAAI,CAAC,MAAMD,IAAI,CAAC,MAAM,CAAC,CAAC;IAC9BL,QAAQ,CAACM,IAAI,CAAC,MAAMD,IAAI,CAAC,aAAa,CAAC,CAAC;IACxC,KAAK,MAAME,GAAG,IAAI,MAAMF,IAAI,CAAC,SAAS,CAAC,EAAE;MACrC,IAAIG,MAAM,CAACC,SAAS,CAACC,cAAc,CAACC,IAAI,CAAC,MAAMN,IAAI,CAAC,SAAS,CAAC,EAAEE,GAAG,CAAC,EAAE;QAClE,MAAMK,OAAO,GAAG,MAAMP,IAAI,CAAC,SAAS,CAAC,CAACE,GAAG,CAAC;QAC1CL,OAAO,CAACI,IAAI,CAAC,MAAMM,OAAO,CAAC,MAAM,CAAC,CAAC;MACvC;MAAC;IACL;IAAC;IACD,IAAI,MAAMP,IAAI,CAAC,UAAU,CAAC,EAAC;MACvBF,aAAa,GAAGA,aAAa,GAAG,CAAC;IACrC;EACJ;EAAC;EAEDA,aAAa,GAAGA,aAAa,IAAG,MAAMF,eAAe;EAErD,IAAIY,YAAoB,GAAG,CAAC;EAC5B,KAAK,MAAMN,GAAG,IAAIP,QAAQ,EAAE;IACxB,IAAIQ,MAAM,CAACC,SAAS,CAACC,cAAc,CAACC,IAAI,CAACX,QAAQ,EAAEO,GAAG,CAAC,EAAE;MACrD,MAAMK,OAAO,GAAGZ,QAAQ,CAACO,GAAG,CAAC;MAC7BM,YAAY,GAAGA,YAAY,GAAGD,OAAO;IACzC;IAAC;EACL;EAAC;EACDC,YAAY,GAAGA,YAAY,GAAGZ,eAAe;EAC7C,IAAIa,WAAW,GAAGD,YAAY,GAAC,IAAI;EAEnC,OAAO;IAAC,OAAO,EAACd,KAAK;IAAE,aAAa,EAACe,WAAW;IAAE,SAAS,EAACZ,OAAO;IAAE,eAAe,EAACC;EAAa,CAAC;AACvG;AAEA,eAAeY,WAAW,CAACC,OAAe,EAAE;EAAC;EACzC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iFAAiF,EAAE;IAC5GC,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MAAE,eAAe,EAAE,SAAS,GAAGJ;IAAO;EACnD,CAAC,CAAC;EAEF,IAAIK,QAAQ,GAAG,MAAMJ,QAAQ,CAACK,IAAI,EAAE;EAEpC,OAAO,MAAMD,QAAQ;AACzB;AAAC;AAED,eAAeE,IAAI,CAACP,OAAe,EAAC;EAChC,IAAIQ,QAAQ,GAAG,MAAM3B,cAAc,CAAC,MAAMkB,WAAW,CAACC,OAAO,CAAC,CAAC;EAC/D,OAAOQ,QAAQ;AACnB;AAAC;AAED,IAAIjB,GAAG,GAAG,6PAA6P;AACvQkB,OAAO,CAACC,GAAG,CAACH,IAAI,CAAChB,GAAG,CAAC,CAAC;AACtB,MAAMoB,YAAY,GAAGJ,IAAI,CAAChB,GAAG,CAAC;AAC9B,iEAAeoB,YAAY","sources":["webpack://emc-2/./src/pages/reading.ts"],"sourcesContent":["async function handleResponse(jsonObject){//looks at the json data and returns an object with the interresting infomation\n    let songs: string[] = []\n    let times_ms: number[] = []\n    let number_of_songs: number = await jsonObject[\"total\"]\n    let artists: string[] = []\n    let explicit_rate: number = 0\n\n    for (let i = 0; i < number_of_songs; i++){//get the data for each line song that is listed as well as \n        const song = await jsonObject[\"items\"][i];\n        songs.push(await song[\"name\"]);\n        times_ms.push(await song[\"duration_ms\"]);\n        for (const key in await song[\"artists\"]) {\n            if (Object.prototype.hasOwnProperty.call(await song[\"artists\"], key)) {\n                const element = await song[\"artists\"][key];\n                artists.push(await element[\"name\"]);\n            };\n        };\n        if (await song[\"explicit\"]){\n            explicit_rate = explicit_rate + 1\n        }\n    };\n    \n    explicit_rate = explicit_rate / await number_of_songs\n\n    let mean_time_ms: number = 0\n    for (const key in times_ms) {\n        if (Object.prototype.hasOwnProperty.call(times_ms, key)) {\n            const element = times_ms[key];\n            mean_time_ms = mean_time_ms + element;\n        };\n    };\n    mean_time_ms = mean_time_ms / number_of_songs;\n    let mean_time_s = mean_time_ms/1000\n\n    return {\"songs\":songs, \"mean_time_s\":mean_time_s, \"artists\":artists, \"explicit_rate\":explicit_rate}\n}\n\nasync function getJsonData(authKey: string) {//from app.js gets the json from the spotify api\n    const response = await fetch(\"https://api.spotify.com/v1/me/top/tracks?time_range=long_term&limit=50&offset=0\", {\n        method: 'GET',\n        headers: { 'Authorization': 'Bearer ' + authKey},\n    });\n\n    let jsonData = await response.json()\n\n    return await jsonData\n};\n\nasync function main(authKey: string){\n    let songInfo = await handleResponse(await getJsonData(authKey));\n    return songInfo\n};\n\nlet key = \"BQANdXNYVlbdfiIWz4P8U8645l5tF8lXIclddwsGvf9MN7fQMOiK1RDnyJuHDQYlmRA5NKcUJ9bXjtQUjENnS7hZKM1FNJDsD68ZnbHnHirKCw2QNWK5ZVVVWusmlEubpy062KrF-DnBK0izjzr6WpA09UgW6nfPM6rOcQugH0ZWkCV1qpKZDMG9dI6Q8BZLvb2voRBUGralGt_PjltX-Fz5NcRm3Uw7KGcIhXTuyxuL-WCljGAex_FR3FQ\"\nconsole.log(main(key))\nconst responseJSON = main(key)\nexport default responseJSON;\n"],"names":["handleResponse","jsonObject","songs","times_ms","number_of_songs","artists","explicit_rate","i","song","push","key","Object","prototype","hasOwnProperty","call","element","mean_time_ms","mean_time_s","getJsonData","authKey","response","fetch","method","headers","jsonData","json","main","songInfo","console","log","responseJSON"],"sourceRoot":""}